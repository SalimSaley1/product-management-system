

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_SECOND_USER}
      MYSQL_PASSWORD: ${DB_SECOND_USER_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring_backend
    restart: unless-stopped
    ports:
      - "5050:5050"
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${DRIVER}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
     

      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE}
      SECRETEJWTSTRING:  ${SECRETE_JWT_STRING}
      LOGGING_LEVEL_COM_PMS_BACKEND: DEBUG


    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: